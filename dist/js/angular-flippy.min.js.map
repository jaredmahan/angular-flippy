{"version":3,"sources":["flippy-directive.js"],"names":["angular","module","directive","restrict","scope","flip","flipBack","duration","timingFunction","link","$scope","$elem","$attrs","_flip","isBack","arguments","length","undefined","state","flipped","setTimeout","toggleClass","CUSTOM_PREFIX","options","forEach","item","flipFunc","evt","eventName","indexOf","element","addEventListener","$on","substr","name","el","find","prefix","css"],"mappings":"AAAA,YAGAA,SAAQC,OAAO,qBACbC,UAAU,SAAU,WACpB,OACCC,SAAU,IACVC,OACCC,KAAM,IACNC,SAAU,IACVC,SAAU,IACVC,eAAgB,KAEjBC,KAAM,SAACC,EAAQC,EAAOC,GA4CrB,QAASC,KAAsB,GAAhBC,KAAgBC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,KAAAA,UAAA,KACxBD,IAAWI,EAAMC,SAAaL,GAAUI,EAAMC,UAEnDC,WAAW,WACVT,EAAMU,YAAY,WAClBH,EAAMC,SAAWD,EAAMC,SACrB,GAIL,QAASd,KACRQ,IAGD,QAASP,KACRO,GAAM,GAzDP,GAAMS,GAAgB,UAChBJ,GACLC,SAAS,GAEJI,GACLhB,SAAU,IACVC,eAAgB,cAIjBR,SAAQwB,SAAS,WAAY,kBAAmB,SAACC,GAChDF,EAAQE,GAASf,EAAOe,GAASf,EAAOe,GAAQF,EAAQE,KAGzDzB,QAAQwB,SAASnB,KAAMA,EAAMC,SAAUA,GAAW,SAACoB,EAAUC,GAC5D3B,QAAQwB,QAAQd,EAAOiB,GAAM,SAACC,GACzBA,EAAUC,QAAQP,QAErBtB,QAAQ8B,QAAQnB,GAAO,GAAGoB,iBAAiBH,EAAWF,GAEtDhB,EAAOsB,IAAIJ,EAAUK,OAAOX,EAAcN,QAASU,OAMtD1B,QAAQwB,SAAS,eAAgB,eAAgB,SAACU,GACjD,GAAMC,GAAKxB,EAAMyB,KAAKF,EACL,IAAbC,EAAGnB,QACNhB,QAAQwB,SAAS,GAAI,OAAQ,YAAa,SAACa,GAC1CrC,QAAQ8B,QAAQK,EAAG,IAAIG,IAAID,EAAS,aAAc,OAASd,EAAQhB,SAAS,IAAO,KAAOgB,EAAQf","file":"angular-flippy.min.js","sourcesContent":["/**\r\n * handles the behaviour of flipping card.\r\n */\r\nangular.module('angular-flippy', [])\r\n\t.directive('flippy', () => {\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\tscope: {\r\n\t\t\t\tflip: '=',\r\n\t\t\t\tflipBack: '=',\r\n\t\t\t\tduration: '@',\r\n\t\t\t\ttimingFunction: '@'\r\n\t\t\t},\r\n\t\t\tlink: ($scope, $elem, $attrs) => {\r\n\r\n\t\t\t\tconst CUSTOM_PREFIX = 'custom:';\r\n\t\t\t\tconst state = {\r\n\t\t\t\t\tflipped: false\r\n\t\t\t\t};\r\n\t\t\t\tconst options = {\r\n\t\t\t\t\tduration: 400,\r\n\t\t\t\t\ttimingFunction: 'ease-in-out'\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// assign new options\r\n\t\t\t\tangular.forEach(['duration', 'timingFunction'], (item) => {\r\n\t\t\t\t\toptions[item] = ($scope[item]) ? $scope[item] : options[item];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tangular.forEach({flip: flip, flipBack: flipBack}, (flipFunc, evt) => {\r\n\t\t\t\t\tangular.forEach($scope[evt], (eventName) => {\r\n\t\t\t\t\t\tif (eventName.indexOf(CUSTOM_PREFIX) === -1) {\r\n\t\t\t\t\t\t\t// directly register event listener to avoid having to start off angular's digest cycle\r\n\t\t\t\t\t\t\tangular.element($elem)[0].addEventListener(eventName, flipFunc);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$scope.$on(eventName.substr(CUSTOM_PREFIX.length), flipFunc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// set flip duration\r\n\t\t\t\tangular.forEach(['flippy-front', 'flippy-back'], (name) => {\r\n\t\t\t\t\tconst el = $elem.find(name);\r\n\t\t\t\t\tif (el.length == 1) {\r\n\t\t\t\t\t\tangular.forEach(['', '-ms-', '-webkit-'], (prefix) => {\r\n\t\t\t\t\t\t\tangular.element(el[0]).css(prefix + 'transition', 'all ' + options.duration/1000 + 's ' + options.timingFunction);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * flips the card.\r\n\t\t\t\t * will be ignored, if the state is already the same as the target state.\r\n\t\t\t\t *\r\n\t\t\t\t * @param boolean isBack\r\n\t\t\t\t */\r\n\t\t\t\tfunction _flip(isBack = false) {\r\n\t\t\t\t\tif ((!isBack && !state.flipped) || (isBack && state.flipped)) {\r\n\t\t\t\t\t\t// to avoid toggling it right back if flip-back is the same event\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t$elem.toggleClass('flipped');\r\n\t\t\t\t\t\t\tstate.flipped = !state.flipped;\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction flip() {\r\n\t\t\t\t\t_flip();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction flipBack() {\r\n\t\t\t\t\t_flip(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n"],"sourceRoot":"/source/"}